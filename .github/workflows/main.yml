name: test_pipeline

on:
  push:
    branches:
      - main

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies and build frontend
        run: |
          cd mail-remover
          npm install
          npm run build

  build_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Build backend
        run: |
          cd MailRemoverAPI/MailRemoverAPI
          dotnet restore
          dotnet build

  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Run unit tests
        run: |
          cd MailRemoverAPI/UnitTests1
          dotnet test --filter Category=Unit

  integration_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Run integration tests
        run: |
          cd MailRemoverAPI/AllIntegratinTests
          dotnet test --filter Category=Integration

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_frontend
      - build_backend
      - unit_tests
      - integration_tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Publish API
        run: |
          cd MailRemoverAPI/MailRemoverAPI
          dotnet publish -c Release -o ./publish
